{"version":3,"sources":["theme.js","Components/LineChart.js","Components/VelocityChartOptions.js","Components/HeightChartOptions.js","Utils/Euler.js","App.js","Utils/RungeKutta.js","serviceWorker.js","index.js"],"names":["fonts","body","heading","monospace","colors","text","background","primary","LineChart","options","series","className","type","width","dataLabels","enabled","stroke","curve","legend","horizontalAlign","tooltip","x","formatter","Math","round","y","xaxis","title","style","cssClass","labels","value","yaxis","theme","mode","chart","id","zoom","annotations","strokeDashArray","points","seriesIndex","marker","size","radius","label","borderColor","min","euler","func","limit","step","solution","push","eulerHeight","v","h","freefall","time","speed","pow","eulerVelocitySeries","name","data","landing","eulerHeightSeries","rungeKuttaVelocitySeries","k1","k2","k3","rungeKutta","rungeKuttaHeightSeries","rungeKuttaHeight","indexOfClosest","nums","target","closest","Number","MAX_SAFE_INTEGER","index","forEach","num","i","dist","abs","indexOfDeploymentTimeEuler","map","indexOfLandingEuler","landingTimeEuler","landingVelocityEuler","deploymentHeightEuler","indexOfDeploymentTime","indexOfLanding","landingTime","landingVelocity","deploymentHeight","App","basename","exact","to","activeStyle","color","path","VelocityChartOptions","HeightChartOptions","Boolean","window","location","hostname","match","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","injectStyles","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a23f1f5.chunk.js","sourcesContent":["export default {\r\n    fonts: {\r\n        body: 'system-ui, sans-serif',\r\n        heading: '\"Avenir Next\", sans-serif',\r\n        monospace: 'Menlo, monospace',\r\n    },\r\n    colors: {\r\n        text: '#000',\r\n        background: '#fff',\r\n        primary: '#33e',\r\n    },\r\n}","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nconst LineChart = ({ options, series }) => {\r\n    return (\r\n        <>\r\n            <div className=\"chart\">\r\n                <Chart options={options} series={series} type=\"line\" width=\"100%\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LineChart;","export default {\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'straight'\r\n    },\r\n    legend: {\r\n        horizontalAlign: 'left'\r\n    },\r\n    tooltip: {\r\n        enabled: true,\r\n        x: {\r\n            formatter: (x) => Math.round(x * 100) / 100 + ' s'\r\n        },\r\n        y: {\r\n            formatter: (y) => Math.round(y * 100) / 100 + ' m/s'\r\n        }\r\n    },\r\n    xaxis: {\r\n        title: {\r\n            text: \"Time\",\r\n            style: {\r\n                cssClass: 'axis-title',\r\n            },\r\n        },\r\n        labels: {\r\n            formatter: function (value) {\r\n                return Math.round(value * 100) / 100;\r\n            }\r\n        },\r\n        tooltip: {\r\n            enabled: false,\r\n        }\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: \"Velocity\",\r\n            style: {\r\n                cssClass: 'axis-title',\r\n            },\r\n        },\r\n        labels: {\r\n            formatter: function (value) {\r\n                return Math.round(value * 100) / 100;\r\n            }\r\n        }\r\n    },\r\n    theme: {\r\n        mode: 'dark',\r\n    },\r\n    chart: {\r\n        id: 'pirmas',\r\n        background: '#282c34',\r\n        zoom: {\r\n            enabled: false,\r\n        }\r\n    },\r\n    annotations: {\r\n        xaxis: [{\r\n            x: 118.79999999999752,\r\n            strokeDashArray: 5,\r\n        }],\r\n        points: [{\r\n            x: 118.79999999999752,\r\n            y: 11.287160847617974,\r\n            seriesIndex: 0,\r\n            marker: {\r\n                size: 6,\r\n                radius: 2,\r\n            },\r\n            label: {\r\n                text: 'Landing',\r\n                borderColor: 'transparent',\r\n                style: {\r\n                    cssClass: 'axis-annotation',\r\n                    background: 'transparent',\r\n                }\r\n            }\r\n        }]\r\n    }\r\n}","export default {\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'straight'\r\n    },\r\n    legend: {\r\n        horizontalAlign: 'left'\r\n    },\r\n    tooltip: {\r\n        enabled: true,\r\n        x: {\r\n            formatter: (x) => Math.round(x * 100) / 100 + ' s'\r\n        },\r\n        y: {\r\n            formatter: (y) => Math.round(y * 100) / 100 + ' m'\r\n        }\r\n    },\r\n    xaxis: {\r\n        title: {\r\n            text: \"Time\",\r\n            style: {\r\n                cssClass: 'axis-title',\r\n            },\r\n        },\r\n        labels: {\r\n            formatter: function (value) {\r\n                return Math.round(value * 100) / 100;\r\n            }\r\n        },\r\n        tooltip: {\r\n            enabled: false,\r\n        }\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: \"Height\",\r\n            style: {\r\n                cssClass: 'axis-title',\r\n            },\r\n        },\r\n        min: 0,\r\n        labels: {\r\n            formatter: function (value) {\r\n                return Math.round(value * 100) / 100;\r\n            }\r\n        }\r\n    },\r\n    theme: {\r\n        mode: 'dark',\r\n    },\r\n    chart: {\r\n        background: '#282c34',\r\n        zoom: {\r\n            enabled: false,\r\n        }\r\n    },\r\n    annotations: {\r\n        xaxis: [{\r\n            x: 25,\r\n            strokeDashArray: 5,\r\n        }, {\r\n            x: 118.79999999999752,\r\n            strokeDashArray: 5,\r\n        }],\r\n        points: [{\r\n            x: 25,\r\n            y: 1072.3173778797357,\r\n            seriesIndex: 0,\r\n            marker: {\r\n                size: 6,\r\n                radius: 2,\r\n            },\r\n            label: {\r\n                text: 'Parachute deployed',\r\n                borderColor: 'transparent',\r\n                style: {\r\n                    cssClass: 'axis-annotation',\r\n                    background: 'transparent',\r\n                }\r\n            }\r\n        }, {\r\n            x: 118.79999999999752,\r\n            y: 0,\r\n            seriesIndex: 0,\r\n            marker: {\r\n                size: 6,\r\n                radius: 2,\r\n            },\r\n            label: {\r\n                text: 'Landing',\r\n                borderColor: 'transparent',\r\n                style: {\r\n                    cssClass: 'axis-annotation',\r\n                    background: 'transparent',\r\n                }\r\n            }\r\n        }]\r\n    }\r\n}","const euler = (func, x, y, limit, step) => {\r\n    const solution = [];\r\n    while (x < limit) {\r\n        solution.push([x, y]);\r\n        y += step * func(x, y, step);\r\n        x += step;\r\n    }\r\n    return solution;\r\n}\r\n\r\nconst eulerHeight = (func, x, v, h, limit, step) => {\r\n    const solution = [];\r\n    while (x < limit) {\r\n        solution.push([x, h]);\r\n        v += step * func(x, v);\r\n        h -= step * v;\r\n        x += step;\r\n    }\r\n    return solution;\r\n}\r\n\r\nexport { euler, eulerHeight };","import React, { useState } from 'react';\nimport './App.css';\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nimport LineChart from './Components/LineChart';\nimport VelocityChartOptions from './Components/VelocityChartOptions';\nimport HeightChartOptions from './Components/HeightChartOptions';\nimport { euler, eulerHeight } from './Utils/Euler';\nimport { rungeKutta, rungeKuttaHeight } from './Utils/RungeKutta';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\n\nconst freefall = (time, speed) => {\n  if (time < 25)\n    return (9.8 * 130 - 0.25 * Math.pow(speed, 2)) / 130;\n  return (9.8 * 130 - 10 * Math.pow(speed, 2)) / 130;\n}\n\nconst eulerVelocitySeries = [{ name: \"Step 0.05\", data: euler(freefall, 0, 0, 130, 0.05) },\n{ name: \"Step 0.15\", data: euler(freefall, 0, 0, 130, 0.15) },\n{ name: \"Step 0.2\", data: euler(freefall, 0, 0, 130, 0.2) }];\n\nconst landing = (time, speed) => {\n  return freefall(time, speed);\n}\n\nconst eulerHeightSeries = [{ name: \"Step 0.05\", data: eulerHeight(landing, 0, 0, 2500, 130, 0.05) },\n{ name: \"Step 0.15\", data: eulerHeight(landing, 0, 0, 2500, 130, 0.15) },\n{ name: \"Step 0.2\", data: eulerHeight(landing, 0, 0, 2500, 130, 0.2) }];\n\nconst rungeKuttaVelocitySeries = [{ name: \"Step 0.05\", data: rungeKutta(freefall, 0, 0, 130, 0.1) }];\nconst rungeKuttaHeightSeries = [{ name: \"Step 0.05\", data: rungeKuttaHeight(landing, 0, 0, 2500, 130, 0.1) }];\n\nfunction indexOfClosest(nums, target) {\n  let closest = Number.MAX_SAFE_INTEGER;\n  let index = 0;\n\n  nums.forEach((num, i) => {\n    let dist = Math.abs(target - num);\n\n    if (dist < closest) {\n      index = i;\n      closest = dist;\n    }\n  });\n  return index;\n}\n\nconst indexOfDeploymentTimeEuler = indexOfClosest(eulerHeightSeries[0].data.map(i => i[0]), 25);\nconst indexOfLandingEuler = indexOfClosest(eulerHeightSeries[0].data.map(i => i[1]), 0);\nconst landingTimeEuler = eulerVelocitySeries[0].data[indexOfLandingEuler][0];\nconst landingVelocityEuler = eulerVelocitySeries[0].data[indexOfLandingEuler][1];\nconst deploymentHeightEuler = eulerHeightSeries[0].data[indexOfDeploymentTimeEuler][1];\n\nconst indexOfDeploymentTime = indexOfClosest(rungeKuttaHeightSeries[0].data.map(i => i[0]), 25);\nconst indexOfLanding = indexOfClosest(rungeKuttaHeightSeries[0].data.map(i => i[1]), 0);\nconst landingTime = rungeKuttaHeightSeries[0].data[indexOfLanding][0];\nconst landingVelocity = rungeKuttaVelocitySeries[0].data[indexOfLanding][1];\nconst deploymentHeight = rungeKuttaHeightSeries[0].data[indexOfDeploymentTime][1];\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>Skydiving</h1>\n            <h4>Solving ordinary differential equation using numerical methods</h4>\n          </header>\n          <div className=\"content\">\n            <p>A skydiver weighing 120 jumps from a plane at 2500 meters. 25 seconds in, he deploys his parachute.\n              When and at what velocity does he reach the ground? How high was the skydiver when he deployed his parachute?</p>\n            <div className=\"menu\">\n              <NavLink exact to=\"/\" activeStyle={{\n                color: \"rgba(78, 205, 196, 0.85)\"\n              }}>\n                <h3>Euler</h3>\n              </NavLink>\n              <NavLink to=\"/runge-kutta\" activeStyle={{\n                color: \"rgba(78, 205, 196, 0.85)\"\n              }}>\n                <h3>Runge – Kutta</h3>\n              </NavLink>\n            </div>\n          </div>\n          <Switch>\n            <Route exact path=\"/\">\n              <h5 className=\"title\">Velocity</h5>\n              <LineChart options={VelocityChartOptions} series={eulerVelocitySeries} />\n              <h5 className=\"title\">Height</h5>\n              <LineChart options={HeightChartOptions} series={eulerHeightSeries} />\n              <h3>Answers</h3>\n              <ul>\n                <li>Landing time: <b>{Math.round(landingTimeEuler * 100) / 100}s</b></li>\n                <li>Landing velocity: <b>{Math.round(landingVelocityEuler * 100) / 100}m/s</b> </li>\n                <li>Parachute deployed at: <b>{Math.round(deploymentHeightEuler * 100) / 100}m</b></li>\n              </ul>\n            </Route>\n            <Route exact path=\"/runge-kutta/\">\n              <h5 className=\"title\">Velocity</h5>\n              <LineChart options={VelocityChartOptions} series={rungeKuttaVelocitySeries} />\n              <h5 className=\"title\">Height</h5>\n              <LineChart options={HeightChartOptions} series={rungeKuttaHeightSeries} />\n              <h3>Answers</h3>\n              <ul>\n                <li>Landing time: <b>{Math.round(landingTime * 100) / 100}s</b></li>\n                <li>Landing velocity: <b>{Math.round(landingVelocity * 100) / 100}m/s</b> </li>\n                <li>Parachute deployed at: <b>{Math.round(deploymentHeight * 100) / 100}m</b></li>\n              </ul>\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const rungeKutta = (func, x, y, limit, step) => {\r\n    const solution = [];\r\n    while (x < limit) {\r\n        solution.push([x, y]);\r\n\r\n        const k1 = step * func(x, y);\r\n        const k2 = step * func(x + 0.5 * step, y + 0.5 * k1);\r\n        const k3 = step * func(x + 0.5 * step, y + 0.5 * k2);\r\n        const k4 = step * func(x + step, y + k3);\r\n\r\n        y += (1.0 / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4);\r\n        x += step;\r\n    }\r\n    return solution;\r\n}\r\n\r\nconst rungeKuttaHeight = (func, x, v, h, limit, step) => {\r\n    const solution = [];\r\n    while (x < limit) {\r\n        solution.push([x, h]);\r\n\r\n        const k1 = step * func(x, v);\r\n        const k2 = step * func(x + 0.5 * step, v + 0.5 * k1);\r\n        const k3 = step * func(x + 0.5 * step, v + 0.5 * k2);\r\n        const k4 = step * func(x + step, v + k3);\r\n\r\n        v += (1.0 / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4);\r\n        h -= step * v;\r\n        x += step;\r\n    }\r\n    return solution;\r\n}\r\n\r\nexport { rungeKutta, rungeKuttaHeight };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Typography from 'typography'\n\nconst typography = new Typography({\n    baseFontSize: '17px',\n    baseLineHeight: 2,\n    headerFontFamily: ['Avenir Next', 'Helvetica Neue', 'Segoe UI', 'Helvetica', 'Arial', 'sans-serif'],\n    bodyFontFamily: ['Georgia', 'serif'],\n})\ntypography.injectStyles()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}